// Generated by view binder compiler. Do not edit!
package com.example.alexisindickweighttrackingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.alexisindickweighttrackingapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddweightBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final Button buttonCancelSave;

  @NonNull
  public final Button buttonSaveWeight;

  @NonNull
  public final EditText editWeightDate;

  @NonNull
  public final EditText editWeightWeight;

  @NonNull
  public final TableLayout enterWeight;

  @NonNull
  public final TextView textViewTitleWeight;

  private ActivityAddweightBinding(@NonNull ConstraintLayout rootView, @NonNull Button button,
      @NonNull Button buttonCancelSave, @NonNull Button buttonSaveWeight,
      @NonNull EditText editWeightDate, @NonNull EditText editWeightWeight,
      @NonNull TableLayout enterWeight, @NonNull TextView textViewTitleWeight) {
    this.rootView = rootView;
    this.button = button;
    this.buttonCancelSave = buttonCancelSave;
    this.buttonSaveWeight = buttonSaveWeight;
    this.editWeightDate = editWeightDate;
    this.editWeightWeight = editWeightWeight;
    this.enterWeight = enterWeight;
    this.textViewTitleWeight = textViewTitleWeight;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddweightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddweightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_addweight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddweightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.buttonCancelSave;
      Button buttonCancelSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancelSave == null) {
        break missingId;
      }

      id = R.id.buttonSaveWeight;
      Button buttonSaveWeight = ViewBindings.findChildViewById(rootView, id);
      if (buttonSaveWeight == null) {
        break missingId;
      }

      id = R.id.editWeightDate;
      EditText editWeightDate = ViewBindings.findChildViewById(rootView, id);
      if (editWeightDate == null) {
        break missingId;
      }

      id = R.id.editWeightWeight;
      EditText editWeightWeight = ViewBindings.findChildViewById(rootView, id);
      if (editWeightWeight == null) {
        break missingId;
      }

      id = R.id.enterWeight;
      TableLayout enterWeight = ViewBindings.findChildViewById(rootView, id);
      if (enterWeight == null) {
        break missingId;
      }

      id = R.id.textViewTitleWeight;
      TextView textViewTitleWeight = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitleWeight == null) {
        break missingId;
      }

      return new ActivityAddweightBinding((ConstraintLayout) rootView, button, buttonCancelSave,
          buttonSaveWeight, editWeightDate, editWeightWeight, enterWeight, textViewTitleWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
